{
  "generated_queries": [
    "<|begin_of_text|>Below is an instruction that describes a task, paired with an input that provides further context. Write a response that appropriately completes the request.\n      ### Instruction:\n      Write a SQL query that answers the following question based on the given database schema. Use SQLite syntax.\n\n      ### Input:\n      [SCHEMA] CREATE TABLE creative_ai (application_id INT, name TEXT, region TEXT, explainability_score FLOAT); INSERT INTO creative_ai (application_id, name, region, explainability_score) VALUES (1, 'ApplicationX', 'Europe', 0.87), (2, 'ApplicationY', 'North America', 0.91), (3, 'ApplicationZ', 'Europe', 0.84), (4, 'ApplicationAA', 'North America', 0.93), (5, 'ApplicationAB', 'Europe', 0.89);\n[QUESTION] What is the average explainability score of creative AI applications in 'Europe' and 'North America' in the 'creative_ai' table?\n\n      ### Response: SELECT AVG(explainability_score) FROM creative_ai WHERE region IN ('Europe', 'North America');<|end_of_text|>",
    "<|begin_of_text|>Below is an instruction that describes a task, paired with an input that provides further context. Write a response that appropriately completes the request.\n      ### Instruction:\n      Write a SQL query that answers the following question based on the given database schema. Use SQLite syntax.\n\n      ### Input:\n      [SCHEMA] CREATE TABLE rural_infrastructure (id INT, project_name TEXT, sector TEXT, country TEXT, completion_date DATE); INSERT INTO rural_infrastructure (id, project_name, sector, country, completion_date) VALUES (1, 'Water Supply Expansion', 'Infrastructure', 'Indonesia', '2008-05-15'), (2, 'Rural Electrification', 'Infrastructure', 'Indonesia', '2012-08-28'), (3, 'Transportation Improvement', 'Infrastructure', 'Indonesia', '2009-12-31');\n[QUESTION] Delete all records of rural infrastructure projects in Indonesia that have a completion date before 2010.\n\n      ### Response: DELETE FROM rural_infrastructure WHERE country = 'Indonesia' AND completion_date < '2010-01-01';<|end_of_text|>",
    "<|begin_of_text|>Below is an instruction that describes a task, paired with an input that provides further context. Write a response that appropriately completes the request.\n      ### Instruction:\n      Write a SQL query that answers the following question based on the given database schema. Use SQLite syntax.\n\n      ### Input:\n      [SCHEMA] CREATE TABLE Accidents (id INT, launch_provider VARCHAR(255), year INT, description TEXT); INSERT INTO Accidents (id, launch_provider, year, description) VALUES (1, 'SpaceX', 2015, 'Falcon 9 explosion'), (2, 'Blue Origin', 2011, 'Propulsion system failure'), (3, 'SpaceX', 2016, 'Falcon 9 explosion');\n[QUESTION] How many accidents have been recorded for SpaceX and Blue Origin rocket launches?\n\n      ### Response: SELECT COUNT(*) FROM Accidents WHERE launch_provider IN ('SpaceX', 'Blue Origin');<|end_of_text|>",
    "<|begin_of_text|>Below is an instruction that describes a task, paired with an input that provides further context. Write a response that appropriately completes the request.\n      ### Instruction:\n      Write a SQL query that answers the following question based on the given database schema. Use SQLite syntax.\n\n      ### Input:\n      [SCHEMA] CREATE TABLE sales (id INT, location VARCHAR(20), quantity INT, price DECIMAL(5,2)); INSERT INTO sales (id, location, quantity, price) VALUES (1, 'Northeast', 50, 12.99), (2, 'Midwest', 75, 19.99), (3, 'West', 120, 14.49);\n[QUESTION] What is the maximum quantity of seafood sold in a single transaction?\n\n      ### Response: \n      SELECT MAX(quantity) FROM sales;<|end_of_text|>",
    "<|begin_of_text|>Below is an instruction that describes a task, paired with an input that provides further context. Write a response that appropriately completes the request.\n      ### Instruction:\n      Write a SQL query that answers the following question based on the given database schema. Use SQLite syntax.\n\n      ### Input:\n      [SCHEMA] CREATE TABLE Movies_Release_Year (id INT, title VARCHAR(100), release_year INT, budget DECIMAL(10,2)); INSERT INTO Movies_Release_Year (id, title, release_year, budget) VALUES (1, 'The Matrix', 1999, 63000000.00), (2, 'Titanic', 1997, 200000000.00), (3, 'The Lord of the Rings: The Fellowship of the Ring', 2001, 93000000.00);\n[QUESTION] What is the total budget for movies released before 2010?\n\n      ### Response: \n      SELECT SUM(budget) FROM Movies_Release_Year WHERE release_year < 2010;<|end_of_text|>",
    "<|begin_of_text|>Below is an instruction that describes a task, paired with an input that provides further context. Write a response that appropriately completes the request.\n      ### Instruction:\n      Write a SQL query that answers the following question based on the given database schema. Use SQLite syntax.\n\n      ### Input:\n      [SCHEMA] CREATE TABLE attorneys (attorney_id INT, attorney_name VARCHAR(50), attorney_email VARCHAR(50), attorney_phone VARCHAR(15));\n[QUESTION] Add a new attorney named 'Oliver Martinez' with email 'oliver.martinez@lawfirm.com' and phone '555-555-5678' to the 'attorneys' table\n\n      ### Response: \n      INSERT INTO attorneys(attorney_name, attorney_email, attorney_phone) VALUES ('Oliver Martinez', 'oliver.martinez@lawfirm.com', '555-555-5678');<|end_of_text|>",
    "<|begin_of_text|>Below is an instruction that describes a task, paired with an input that provides further context. Write a response that appropriately completes the request.\n      ### Instruction:\n      Write a SQL query that answers the following question based on the given database schema. Use SQLite syntax.\n\n      ### Input:\n      [SCHEMA] CREATE TABLE co2_emissions (id INT PRIMARY KEY, plant_name VARCHAR(255), chemical_name VARCHAR(255), co2_emission_per_ton_produced DECIMAL(5,2)); INSERT INTO co2_emissions (id, plant_name, chemical_name, co2_emission_per_ton_produced) VALUES (1, 'Plant A', 'Nitric Acid', 2.3); INSERT INTO co2_emissions (id, plant_name, chemical_name, co2_emission_per_ton_produced) VALUES (2, 'Plant B', 'Acetic Acid', 1.8);\n[QUESTION] Identify the top 2 plants with the highest CO2 emissions per ton produced.\n\n      ### Response: SELECT plant_name FROM co2_emissions ORDER BY co2_emission_per_ton_produced DESC LIMIT 2;<|end_of_text|>",
    "<|begin_of_text|>Below is an instruction that describes a task, paired with an input that provides further context. Write a response that appropriately completes the request.\n      ### Instruction:\n      Write a SQL query that answers the following question based on the given database schema. Use SQLite syntax.\n\n      ### Input:\n      [SCHEMA] CREATE TABLE climate_communication (project_id INT, project_name VARCHAR(255), location VARCHAR(255), start_date DATE, end_date DATE, total_cost DECIMAL(10,2));\n[QUESTION] What is the total cost of all climate communication projects that ended after 2010 in 'Antarctica'?\n\n      ### Response: \n      SELECT SUM(total_cost) FROM climate_communication WHERE location = 'Antarctica' AND end_date > '2010-01-01';<|end_of_text|>",
    "<|begin_of_text|>Below is an instruction that describes a task, paired with an input that provides further context. Write a response that appropriately completes the request.\n      ### Instruction:\n      Write a SQL query that answers the following question based on the given database schema. Use SQLite syntax.\n\n      ### Input:\n      [SCHEMA] CREATE TABLE marine_species (name TEXT, conservation_status TEXT);\n[QUESTION] List all marine species with their conservation status.\n\n      ### Response: \n      SELECT name, conservation_status FROM marine_species;<|end_of_text|>",
    "<|begin_of_text|>Below is an instruction that describes a task, paired with an input that provides further context. Write a response that appropriately completes the request.\n      ### Instruction:\n      Write a SQL query that answers the following question based on the given database schema. Use SQLite syntax.\n\n      ### Input:\n      [SCHEMA] CREATE TABLE researchers (id INT, name VARCHAR(255), organization VARCHAR(255), publications INT); INSERT INTO researchers (id, name, organization, publications) VALUES (1, 'Alice Johnson', 'NOAA', 25); INSERT INTO researchers (id, name, organization, publications) VALUES (2, 'Bob Smith', 'University of Miami', 30); INSERT INTO researchers (id, name, organization, publications) VALUES (3, 'Charlie Brown', 'National Geographic', 50);\n[QUESTION] What is the average number of publications per researcher for researchers working at the 'National Geographic' organization?\n\n      ### Response: \n      SELECT AVG(publications) FROM researchers WHERE organization = 'National Geographic';<|end_of_text|>",
    "<|begin_of_text|>Below is an instruction that describes a task, paired with an input that provides further context. Write a response that appropriately completes the request.\n      ### Instruction:\n      Write a SQL query that answers the following question based on the given database schema. Use SQLite syntax.\n\n      ### Input:\n      [SCHEMA] CREATE TABLE dapp_ranking (dapp_id INT, dapp_name VARCHAR(50), dapp_category VARCHAR(30), dapp_rating DECIMAL(3,2), dapp_downloads INT, dapp_region VARCHAR(30)); INSERT INTO dapp_ranking (dapp_id, dapp_name, dapp_category, dapp_rating, dapp_downloads, dapp_region) VALUES (1, 'AsiaPacificDapp', 'Social', 4.3, 2000000, 'Asia-Pacific');\n[QUESTION] How many decentralized applications have been downloaded from the 'Asia-Pacific' region?\n\n      ### Response: SELECT COUNT(dapp_downloads) FROM dapp_ranking WHERE dapp_region = 'Asia-Pacific';<|end_of_text|>",
    "<|begin_of_text|>Below is an instruction that describes a task, paired with an input that provides further context. Write a response that appropriately completes the request.\n      ### Instruction:\n      Write a SQL query that answers the following question based on the given database schema. Use SQLite syntax.\n\n      ### Input:\n      [SCHEMA] CREATE TABLE forests (id INT, name VARCHAR(255), hectares FLOAT, country VARCHAR(255)); INSERT INTO forests (id, name, hectares, country) VALUES (1, 'Amazon Rainforest', 5500000.0, 'Brazil'), (2, 'Daintree Rainforest', 120000.0, 'Australia'), (3, 'Yellowstone', 894000.0, 'USA'), (4, 'Banff National Park', 664000.0, 'Canada');\n[QUESTION] Identify forests in Canada or the United States with an area larger than 1 million hectares?\n\n      ### Response: SELECT * FROM forests WHERE country IN ('Canada', 'United States') AND hectares > 1000000;<|end_of_text|>",
    "<|begin_of_text|>Below is an instruction that describes a task, paired with an input that provides further context. Write a response that appropriately completes the request.\n      ### Instruction:\n      Write a SQL query that answers the following question based on the given database schema. Use SQLite syntax.\n\n      ### Input:\n      [SCHEMA] CREATE TABLE emergency_calls (id INT, city VARCHAR(20), response_time INT);\n[QUESTION] What is the maximum response time for emergency calls in the city of Los Angeles?\n\n      ### Response: \n      SELECT MAX(response_time) FROM emergency_calls WHERE city = 'Los Angeles';<|end_of_text|>",
    "<|begin_of_text|>Below is an instruction that describes a task, paired with an input that provides further context. Write a response that appropriately completes the request.\n      ### Instruction:\n      Write a SQL query that answers the following question based on the given database schema. Use SQLite syntax.\n\n      ### Input:\n      [SCHEMA] CREATE TABLE patrols (id INT, district_id INT, date DATE, type TEXT); INSERT INTO patrols (id, district_id, date, type) VALUES (1, 1, '2021-01-01', 'Patrol'), (2, 1, '2021-01-02', 'Community'), (3, 2, '2021-01-01', 'Patrol'), (4, 2, '2021-01-03', 'Community'), (5, 3, '2021-01-04', 'Patrol'), (6, 3, '2021-01-05', 'Community');\n[QUESTION] What is the total number of police patrols and community engagement events in each district in January 2021?\n\n      ### Response: SELECT district_id, COUNT(*) as total_events FROM patrols WHERE MONTH(date) = 1 AND YEAR(date) = 2021 GROUP BY district_id;<|end_of_text|>",
    "<|begin_of_text|>Below is an instruction that describes a task, paired with an input that provides further context. Write a response that appropriately completes the request.\n      ### Instruction:\n      Write a SQL query that answers the following question based on the given database schema. Use SQLite syntax.\n\n      ### Input:\n      [SCHEMA] CREATE TABLE contracts (id INT, category VARCHAR(255), value DECIMAL(10,2));INSERT INTO contracts (id, category, value) VALUES (1, 'Aircraft', 5000000.00), (2, 'Missiles', 2000000.00), (3, 'Shipbuilding', 8000000.00), (4, 'Cybersecurity', 3000000.00), (5, 'Aircraft', 6000000.00), (6, 'Shipbuilding', 9000000.00);\n[QUESTION] What is the average cybersecurity contract value?\n\n      ### Response: SELECT AVG(value) FROM contracts WHERE category = 'Cybersecurity';<|end_of_text|>",
    "<|begin_of_text|>Below is an instruction that describes a task, paired with an input that provides further context. Write a response that appropriately completes the request.\n      ### Instruction:\n      Write a SQL query that answers the following question based on the given database schema. Use SQLite syntax.\n\n      ### Input:\n      [SCHEMA] CREATE TABLE arms_imports (id INT PRIMARY KEY, country VARCHAR(100), year INT, quantity INT); INSERT INTO arms_imports (id, country, year, quantity) VALUES (1, 'China', 1999, 5000);\n[QUESTION] Delete arms_imports table records where year is before 2000\n\n      ### Response:<|end_of_text|>",
    "<|begin_of_text|>Below is an instruction that describes a task, paired with an input that provides further context. Write a response that appropriately completes the request.\n      ### Instruction:\n      Write a SQL query that answers the following question based on the given database schema. Use SQLite syntax.\n\n      ### Input:\n      [SCHEMA] CREATE TABLE Peacekeeping_Operations (id INT, country VARCHAR(50), military_personnel INT); INSERT INTO Peacekeeping_Operations (id, country, military_personnel) VALUES (1, 'United States', 500), (2, 'United Kingdom', 300), (3, 'Canada', 250);\n[QUESTION] What is the average number of military personnel per country involved in peacekeeping operations?\n\n      ### Response: SELECT AVG(military_personnel) FROM Peacekeeping_Operations;<|end_of_text|>",
    "<|begin_of_text|>Below is an instruction that describes a task, paired with an input that provides further context. Write a response that appropriately completes the request.\n      ### Instruction:\n      Write a SQL query that answers the following question based on the given database schema. Use SQLite syntax.\n\n      ### Input:\n      [SCHEMA] CREATE TABLE daily_investments (client_id INT, date DATE, investment FLOAT); INSERT INTO daily_investments (client_id, date, investment) VALUES (1, '2022-01-01', 1000.00), (1, '2022-01-02', 2000.00), (2, '2022-01-01', 3000.00), (2, '2022-01-02', 4000.00);\n[QUESTION] What is the maximum daily investment for each client?\n\n      ### Response: \n      SELECT client_id, MAX(investment) FROM daily_investments GROUP BY client_id;<|end_of_text|>",
    "<|begin_of_text|>Below is an instruction that describes a task, paired with an input that provides further context. Write a response that appropriately completes the request.\n      ### Instruction:\n      Write a SQL query that answers the following question based on the given database schema. Use SQLite syntax.\n\n      ### Input:\n      [SCHEMA] CREATE TABLE PORTS (ID INT, PortName VARCHAR(30)); CREATE TABLE CARGO_HANDLING (ID INT, PortID INT, CargoType VARCHAR(10), Weight INT); INSERT INTO PORTS (ID, PortName) VALUES (1, 'PortA'), (2, 'PortB'), (3, 'PortC'); INSERT INTO CARGO_HANDLING (ID, PortID, CargoType, Weight) VALUES (1, 1, 'Fruit', 100), (2, 1, 'Fruit', 200), (3, 2, 'Fruit', 300);\n[QUESTION] List the ports with their total cargo weight for 'Fruit' type from the 'CARGO_HANDLING' table.\n\n      ### Response: SELECT Ports.PortName, SUM(Cargo_Weight) FROM Ports INNER JOIN CARGO_HANDLING ON Ports.ID = CARGO_HANDLING.PortID WHERE Cargo_Type = 'Fruit' GROUP BY Ports.PortName;<|end_of_text|>",
    "<|begin_of_text|>Below is an instruction that describes a task, paired with an input that provides further context. Write a response that appropriately completes the request.\n      ### Instruction:\n      Write a SQL query that answers the following question based on the given database schema. Use SQLite syntax.\n\n      ### Input:\n      [SCHEMA] CREATE TABLE container_ships (ship_id INT, ship_name VARCHAR(255), ship_builder VARCHAR(255), year INT, container_type VARCHAR(255), fuel_consumption INT);INSERT INTO container_ships (ship_id, ship_name, ship_builder, year, container_type, fuel_consumption) VALUES (1, 'Ever Golden', 'Imabari Shipbuilding', 2016, 'dry', 230), (2, 'HMM Oslo', 'Hyundai Heavy Industries', 2016,'refrigerated', 250);\n[QUESTION] What is the minimum fuel consumption of container ships built in 2016, grouped by container type?\n\n      ### Response: \n      SELECT MIN(fuel_consumption) FROM container_ships WHERE year = 2016 GROUP BY container_type;<|end_of_text|>"
  ],
  "reference_queries": [
    "\n      SELECT AVG(explainability_score) FROM creative_ai WHERE region IN ('Europe', 'North America');<|end_of_text|>",
    "\n      DELETE FROM rural_infrastructure WHERE country = 'Indonesia' AND completion_date < '2010-01-01';<|end_of_text|>",
    "\n      SELECT launch_provider, COUNT(*) FROM Accidents GROUP BY launch_provider;<|end_of_text|>",
    "\n      SELECT MAX(quantity) FROM sales;<|end_of_text|>",
    "\n      SELECT SUM(budget) FROM Movies_Release_Year WHERE release_year < 2010;<|end_of_text|>",
    "\n      INSERT INTO attorneys (attorney_name, attorney_email, attorney_phone) VALUES ('Oliver Martinez', 'oliver.martinez@lawfirm.com', '555-555-5678');<|end_of_text|>",
    "\n      SELECT plant_name, SUM(co2_emission_per_ton_produced) AS total_co2_emission FROM co2_emissions GROUP BY plant_name ORDER BY total_co2_emission DESC LIMIT 2;<|end_of_text|>",
    "\n      SELECT SUM(total_cost) FROM climate_communication WHERE location = 'Antarctica' AND end_date >= '2010-12-31';<|end_of_text|>",
    "\n      SELECT name, conservation_status FROM marine_species;<|end_of_text|>",
    "\n      SELECT organization, AVG(publications) as avg_publications FROM researchers WHERE organization = 'National Geographic';<|end_of_text|>",
    "\n      SELECT SUM(dapp_downloads) FROM dapp_ranking WHERE dapp_region = 'Asia-Pacific';<|end_of_text|>",
    "\n      SELECT forests.name FROM forests WHERE (forests.country = 'Canada' OR forests.country = 'USA') AND forests.hectares > 1000000;<|end_of_text|>",
    "\n      SELECT MAX(response_time) FROM emergency_calls WHERE city = 'Los Angeles';<|end_of_text|>",
    "\n      SELECT d.name, SUM(IF(p.type = 'Patrol', 1, 0)) as num_patrols, SUM(IF(p.type = 'Community', 1, 0)) as num_community FROM districts d JOIN patrols p ON d.id = p.district_id WHERE p.date >= '2021-01-01' AND p.date < '2021-02-01' GROUP BY d.id;<|end_of_text|>",
    "\n      SELECT AVG(value) as avg_value FROM contracts WHERE category = 'Cybersecurity';<|end_of_text|>",
    "\n      DELETE FROM arms_imports WHERE year < 2000;<|end_of_text|>",
    "\n      SELECT AVG(military_personnel) FROM Peacekeeping_Operations;<|end_of_text|>",
    "\n      SELECT client_id, MAX(investment) OVER (PARTITION BY client_id ORDER BY client_id) as max_daily_investment FROM daily_investments;<|end_of_text|>",
    "\n      SELECT P.PortName, SUM(CH.Weight) FROM PORTS P JOIN CARGO_HANDLING CH ON P.ID = CH.PortID WHERE CH.CargoType = 'Fruit' GROUP BY P.PortName;<|end_of_text|>",
    "\n      SELECT container_type, MIN(fuel_consumption) FROM container_ships WHERE year = 2016 GROUP BY container_type;<|end_of_text|>"
  ],
  "database_schemas": [
    "CREATE TABLE creative_ai (application_id INT, name TEXT, region TEXT, explainability_score FLOAT); INSERT INTO creative_ai (application_id, name, region, explainability_score) VALUES (1, 'ApplicationX', 'Europe', 0.87), (2, 'ApplicationY', 'North America', 0.91), (3, 'ApplicationZ', 'Europe', 0.84), (4, 'ApplicationAA', 'North America', 0.93), (5, 'ApplicationAB', 'Europe', 0.89);",
    "CREATE TABLE rural_infrastructure (id INT, project_name TEXT, sector TEXT, country TEXT, completion_date DATE); INSERT INTO rural_infrastructure (id, project_name, sector, country, completion_date) VALUES (1, 'Water Supply Expansion', 'Infrastructure', 'Indonesia', '2008-05-15'), (2, 'Rural Electrification', 'Infrastructure', 'Indonesia', '2012-08-28'), (3, 'Transportation Improvement', 'Infrastructure', 'Indonesia', '2009-12-31');",
    "CREATE TABLE Accidents (id INT, launch_provider VARCHAR(255), year INT, description TEXT); INSERT INTO Accidents (id, launch_provider, year, description) VALUES (1, 'SpaceX', 2015, 'Falcon 9 explosion'), (2, 'Blue Origin', 2011, 'Propulsion system failure'), (3, 'SpaceX', 2016, 'Falcon 9 explosion');",
    "CREATE TABLE sales (id INT, location VARCHAR(20), quantity INT, price DECIMAL(5,2)); INSERT INTO sales (id, location, quantity, price) VALUES (1, 'Northeast', 50, 12.99), (2, 'Midwest', 75, 19.99), (3, 'West', 120, 14.49);",
    "CREATE TABLE Movies_Release_Year (id INT, title VARCHAR(100), release_year INT, budget DECIMAL(10,2)); INSERT INTO Movies_Release_Year (id, title, release_year, budget) VALUES (1, 'The Matrix', 1999, 63000000.00), (2, 'Titanic', 1997, 200000000.00), (3, 'The Lord of the Rings: The Fellowship of the Ring', 2001, 93000000.00);",
    "CREATE TABLE attorneys (attorney_id INT, attorney_name VARCHAR(50), attorney_email VARCHAR(50), attorney_phone VARCHAR(15));",
    "CREATE TABLE co2_emissions (id INT PRIMARY KEY, plant_name VARCHAR(255), chemical_name VARCHAR(255), co2_emission_per_ton_produced DECIMAL(5,2)); INSERT INTO co2_emissions (id, plant_name, chemical_name, co2_emission_per_ton_produced) VALUES (1, 'Plant A', 'Nitric Acid', 2.3); INSERT INTO co2_emissions (id, plant_name, chemical_name, co2_emission_per_ton_produced) VALUES (2, 'Plant B', 'Acetic Acid', 1.8);",
    "CREATE TABLE climate_communication (project_id INT, project_name VARCHAR(255), location VARCHAR(255), start_date DATE, end_date DATE, total_cost DECIMAL(10,2));",
    "CREATE TABLE marine_species (name TEXT, conservation_status TEXT);",
    "CREATE TABLE researchers (id INT, name VARCHAR(255), organization VARCHAR(255), publications INT); INSERT INTO researchers (id, name, organization, publications) VALUES (1, 'Alice Johnson', 'NOAA', 25); INSERT INTO researchers (id, name, organization, publications) VALUES (2, 'Bob Smith', 'University of Miami', 30); INSERT INTO researchers (id, name, organization, publications) VALUES (3, 'Charlie Brown', 'National Geographic', 50);",
    "CREATE TABLE dapp_ranking (dapp_id INT, dapp_name VARCHAR(50), dapp_category VARCHAR(30), dapp_rating DECIMAL(3,2), dapp_downloads INT, dapp_region VARCHAR(30)); INSERT INTO dapp_ranking (dapp_id, dapp_name, dapp_category, dapp_rating, dapp_downloads, dapp_region) VALUES (1, 'AsiaPacificDapp', 'Social', 4.3, 2000000, 'Asia-Pacific');",
    "CREATE TABLE forests (id INT, name VARCHAR(255), hectares FLOAT, country VARCHAR(255)); INSERT INTO forests (id, name, hectares, country) VALUES (1, 'Amazon Rainforest', 5500000.0, 'Brazil'), (2, 'Daintree Rainforest', 120000.0, 'Australia'), (3, 'Yellowstone', 894000.0, 'USA'), (4, 'Banff National Park', 664000.0, 'Canada');",
    "CREATE TABLE emergency_calls (id INT, city VARCHAR(20), response_time INT);",
    "CREATE TABLE patrols (id INT, district_id INT, date DATE, type TEXT); INSERT INTO patrols (id, district_id, date, type) VALUES (1, 1, '2021-01-01', 'Patrol'), (2, 1, '2021-01-02', 'Community'), (3, 2, '2021-01-01', 'Patrol'), (4, 2, '2021-01-03', 'Community'), (5, 3, '2021-01-04', 'Patrol'), (6, 3, '2021-01-05', 'Community');",
    "CREATE TABLE contracts (id INT, category VARCHAR(255), value DECIMAL(10,2));INSERT INTO contracts (id, category, value) VALUES (1, 'Aircraft', 5000000.00), (2, 'Missiles', 2000000.00), (3, 'Shipbuilding', 8000000.00), (4, 'Cybersecurity', 3000000.00), (5, 'Aircraft', 6000000.00), (6, 'Shipbuilding', 9000000.00);",
    "CREATE TABLE arms_imports (id INT PRIMARY KEY, country VARCHAR(100), year INT, quantity INT); INSERT INTO arms_imports (id, country, year, quantity) VALUES (1, 'China', 1999, 5000);",
    "CREATE TABLE Peacekeeping_Operations (id INT, country VARCHAR(50), military_personnel INT); INSERT INTO Peacekeeping_Operations (id, country, military_personnel) VALUES (1, 'United States', 500), (2, 'United Kingdom', 300), (3, 'Canada', 250);",
    "CREATE TABLE daily_investments (client_id INT, date DATE, investment FLOAT); INSERT INTO daily_investments (client_id, date, investment) VALUES (1, '2022-01-01', 1000.00), (1, '2022-01-02', 2000.00), (2, '2022-01-01', 3000.00), (2, '2022-01-02', 4000.00);",
    "CREATE TABLE PORTS (ID INT, PortName VARCHAR(30)); CREATE TABLE CARGO_HANDLING (ID INT, PortID INT, CargoType VARCHAR(10), Weight INT); INSERT INTO PORTS (ID, PortName) VALUES (1, 'PortA'), (2, 'PortB'), (3, 'PortC'); INSERT INTO CARGO_HANDLING (ID, PortID, CargoType, Weight) VALUES (1, 1, 'Fruit', 100), (2, 1, 'Fruit', 200), (3, 2, 'Fruit', 300);",
    "CREATE TABLE container_ships (ship_id INT, ship_name VARCHAR(255), ship_builder VARCHAR(255), year INT, container_type VARCHAR(255), fuel_consumption INT);INSERT INTO container_ships (ship_id, ship_name, ship_builder, year, container_type, fuel_consumption) VALUES (1, 'Ever Golden', 'Imabari Shipbuilding', 2016, 'dry', 230), (2, 'HMM Oslo', 'Hyundai Heavy Industries', 2016, 'refrigerated', 250);"
  ]
}